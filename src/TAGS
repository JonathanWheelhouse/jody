
cursor.c,910
#define _GNU_SOURCE_GNU_SOURCE1,0
SDL_Cursor *cursor_arrow;cursor_arrow11,187
SDL_Cursor *cursor_wheelhouse;cursor_wheelhouse12,213
SDL_Cursor *cursor_wheelhouse_transparent;cursor_wheelhouse_transparent13,244
SDL_Cursor *cursor_wheelhouse_inverted;cursor_wheelhouse_inverted14,287
SDL_Cursor *cursor_wheelhouse_black_with_white_lines;cursor_wheelhouse_black_with_white_lines15,327
SDL_Cursor *create_cursor_arrow(void)create_cursor_arrow17,382
static const char *wheelhouse[] = {wheelhouse99,2623
SDL_Cursor *create_cursor_wheelhouse(void)create_cursor_wheelhouse142,4053
SDL_Cursor *create_cursor_wheelhouse_transparent(void)create_cursor_wheelhouse_transparent175,4701
SDL_Cursor *create_cursor_wheelhouse_inverted(void)create_cursor_wheelhouse_inverted211,5415
SDL_Cursor *create_cursor_wheelhouse_black_with_white_lines(void)create_cursor_wheelhouse_black_with_white_lines244,6072

resources.h,1303
#define RESOURCES_HRESOURCES_H2,20
enum image_idx {image_idx11,149
	 IMG_BACKGROUND,IMG_BACKGROUND12,166
	 IMG_CLOUD,IMG_CLOUD13,184
	 IMG_COW_BLACK_TILE,IMG_COW_BLACK_TILE14,197
	 IMG_COW_BLACK_LEFT,IMG_COW_BLACK_LEFT15,219
	 IMG_COW_BLACK,IMG_COW_BLACK16,241
	 IMG_COW_BROWN_LEFT,IMG_COW_BROWN_LEFT17,258
	 IMG_COW_BROWN,IMG_COW_BROWN18,280
	 IMG_COW_ORANGE_LEFT,IMG_COW_ORANGE_LEFT19,297
	 IMG_COW_ORANGE,IMG_COW_ORANGE20,320
	 IMG_COW_RED_LEFT,IMG_COW_RED_LEFT21,338
	 IMG_COW_RED,IMG_COW_RED22,358
	 IMG_COW_WHITE_LEFT,IMG_COW_WHITE_LEFT23,373
	 IMG_COW_WHITE,IMG_COW_WHITE24,395
	 IMG_COW_YELLOW_LEFT,IMG_COW_YELLOW_LEFT25,412
	 IMG_COW_YELLOW,IMG_COW_YELLOW26,435
	 IMG_COW_YELLOW_WITH_RED_OUTLINE_LEFT,IMG_COW_YELLOW_WITH_RED_OUTLINE_LEFT27,453
	 IMG_COW_YELLOW_WITH_RED_OUTLINE,IMG_COW_YELLOW_WITH_RED_OUTLINE28,493
	 IMG_KANGAROO_BLACK_LEFT,IMG_KANGAROO_BLACK_LEFT29,528
	 IMG_KANGAROO_BLACK,IMG_KANGAROO_BLACK30,555
	 IMG_KANGAROO_GREY_LEFT,IMG_KANGAROO_GREY_LEFT31,577
	 IMG_KANGAROO_GREY,IMG_KANGAROO_GREY32,603
	 IMG_KANGAROO_RED_LEFT,IMG_KANGAROO_RED_LEFT33,624
	 IMG_KANGAROO_RED,IMG_KANGAROO_RED34,649
	 NUM_IMAGESNUM_IMAGES35,669
struct image {image39,687
	 SDL_Surface *surface;surface40,702
	 int x;x41,726
	 int y;y42,735

gamedefs.h,140
#define GAMEDEFS_HGAMEDEFS_H2,19
#define SCREEN_WIDTH	SCREEN_WIDTH7,98
#define SCREEN_HEIGHT	SCREEN_HEIGHT8,123
#define PI PI10,150

util.h,223
#define UTIL_HUTIL_H2,15
#undef RANDRAND7,64
#define RAND(RAND9,83
#undef MAXMAX12,152
#define MAX(MAX14,170
#undef MINMIN17,224
#define MIN(MIN19,242
#undef UNUSEDUNUSED22,299
#define UNUSED(UNUSED24,320

main.c,612
#define _GNU_SOURCE_GNU_SOURCE1,0
#define X_DIST X_DIST16,255
#define Y_DIST Y_DIST17,273
int fullscreen = 0;fullscreen20,314
double time_scale = 0;time_scale22,335
int main(int argc, char *argv[])main33,657
static void getargs(int argc, char *argv[])getargs50,853
static void setup(int fullscreen)setup87,2034
static void play_game(void)play_game118,2892
static void usage(int ret)usage172,4009
static void handle_events(int *quit, int *pause)handle_events184,4290
static void draw(SDL_Rect *src, int *pause)draw225,5185
static SDL_Rect calc_dest(struct image *image)calc_dest268,6388

img_dir.h,64
#define IMG_DIR_HIMG_DIR_H3,89
#define IMG_DIR IMG_DIR5,108

cursor.h,31
#define CURSOR_HCURSOR_H2,17

resources.c,396
#define _GNU_SOURCE_GNU_SOURCE1,0
SDL_Surface *screen;screen11,187
struct image images[NUM_IMAGES];images13,209
const char *image_names [NUM_IMAGES] = {image_names18,351
void seticon(void)seticon44,1128
void setup_img(void)setup_img65,1644
static void load_img(int i)load_img78,1898
static void set_start_pos(int i, unsigned int x_scale, unsigned int y_scale)set_start_pos92,2235

util.c,161
void fatal(const char *format, ...)fatal7,95
void * xalloc(int size)xalloc18,265
static Sint32 seed = 0;seed27,378
void initrandom(void)initrandom29,403
